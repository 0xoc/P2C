
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocGTEGTLTELTEQUNEQUANDORleftPLUSMINUSleftTIMESDIVMODrightUMINUSUPLUSAND BREAK COLON COMMENTS CONTINUE DIV DIV_EQUAL ELIF ELSE EQ EQU FALSE FOR GT GTE ID IF IN LBRACE LPRAN LT LTE MINUS MINUS_EQUAL MOD NEQU NOT NUMBER OR PLUS PLUS_EQUAL RANGE RBRACE RPRAN SEP TIMES TIMES_EQUAL TRUE WHILE\n        statements : statements statement\n        | empty\n        \n        statement : assignment\n                    | if\n                    | while\n                    | for\n                    | expr\n                    | CONTINUE\n                    | BREAK\n        \n        for : FOR ID IN RANGE LPRAN params RPRAN COLON LBRACE statements RBRACE\n        \n        params : num_or_id\n            |   num_or_id SEP num_or_id\n            | num_or_id SEP num_or_id SEP num_or_id\n        \n        while : WHILE expr COLON LBRACE statements RBRACE\n        \n        if : IF expr COLON LBRACE statements RBRACE elif\n        \n        elif : ELIF expr COLON LBRACE statements RBRACE elif\n        | else\n        \n        else : ELSE COLON LBRACE statements RBRACE\n        | empty\n        \n        assignment : ID EQ expr\n                   | ID PLUS_EQUAL expr\n                   | ID MINUS_EQUAL expr\n                   | ID TIMES_EQUAL expr\n                   | ID DIV_EQUAL expr\n        \n         expr : MINUS expr %prec UMINUS\n        \n         expr : PLUS expr %prec UPLUS\n        \n        expr : expr PLUS expr\n        | expr MINUS expr\n        | expr TIMES expr\n        | expr DIV expr\n        | expr MOD expr\n        | expr AND expr\n        | expr OR expr\n        | expr LT expr\n        | expr LTE expr\n        | expr GT expr\n        | expr GTE expr\n        | expr EQU expr\n        | expr NEQU expr\n        | ID\n        | NUMBER\n        | TRUE\n        | FALSE\n        \n        expr : LPRAN expr RPRAN\n\n        \n        num_or_id : NUMBER\n                | ID\n        empty :'
    
_lr_action_items = {'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,69,71,72,74,75,80,82,84,92,93,95,96,97,99,100,101,102,103,],[-47,9,-2,-1,-3,-4,-5,-6,-7,-8,-9,-40,-41,-42,-43,-40,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-20,-21,-22,-23,-24,-44,-47,-47,9,9,-47,-14,-15,-17,-19,-47,-47,-47,9,9,9,-18,-10,-47,-16,]),'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,69,71,72,74,75,80,82,84,92,93,95,96,97,99,100,101,102,103,],[-47,10,-2,-1,-3,-4,-5,-6,-7,-8,-9,-40,-41,-42,-43,-40,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-20,-21,-22,-23,-24,-44,-47,-47,10,10,-47,-14,-15,-17,-19,-47,-47,-47,10,10,10,-18,-10,-47,-16,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,69,71,72,73,74,75,80,81,82,84,86,92,93,94,95,96,97,99,100,101,102,103,],[-47,11,-2,-1,-3,-4,-5,-6,-7,-8,-9,-40,40,40,42,40,40,40,-41,-42,-43,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-40,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-20,-21,-22,-23,-24,-44,-47,-47,11,11,76,-47,-14,-15,40,-17,-19,76,-47,-47,76,-47,11,11,11,-18,-10,-47,-16,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,69,71,72,74,75,80,82,84,92,93,95,96,97,99,100,101,102,103,],[-47,12,-2,-1,-3,-4,-5,-6,-7,-8,-9,-40,-41,-42,-43,-40,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-20,-21,-22,-23,-24,-44,-47,-47,12,12,-47,-14,-15,-17,-19,-47,-47,-47,12,12,12,-18,-10,-47,-16,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,69,71,72,74,75,80,82,84,92,93,95,96,97,99,100,101,102,103,],[-47,13,-2,-1,-3,-4,-5,-6,-7,-8,-9,-40,-41,-42,-43,-40,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-20,-21,-22,-23,-24,-44,-47,-47,13,13,-47,-14,-15,-17,-19,-47,-47,-47,13,13,13,-18,-10,-47,-16,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,69,71,72,74,75,80,82,84,92,93,95,96,97,99,100,101,102,103,],[-47,14,-2,-1,-3,-4,-5,-6,-7,-8,-9,-40,-41,-42,-43,-40,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-20,-21,-22,-23,-24,-44,-47,-47,14,14,-47,-14,-15,-17,-19,-47,-47,-47,14,14,14,-18,-10,-47,-16,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,69,71,72,74,75,80,81,82,84,87,92,93,95,96,97,99,100,101,102,103,],[-47,16,-2,-1,-3,-4,-5,-6,22,-8,-9,-40,16,16,16,16,16,-41,-42,-43,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,22,-40,22,22,-25,-26,-27,-28,-29,-30,-31,22,22,22,22,22,22,22,22,22,22,22,22,22,-44,-47,-47,16,16,-47,-14,-15,16,-17,-19,22,-47,-47,-47,16,16,16,-18,-10,-47,-16,]),'PLUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,69,71,72,74,75,80,81,82,84,87,92,93,95,96,97,99,100,101,102,103,],[-47,17,-2,-1,-3,-4,-5,-6,21,-8,-9,-40,17,17,17,17,17,-41,-42,-43,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,21,-40,21,21,-25,-26,-27,-28,-29,-30,-31,21,21,21,21,21,21,21,21,21,21,21,21,21,-44,-47,-47,17,17,-47,-14,-15,17,-17,-19,21,-47,-47,-47,17,17,17,-18,-10,-47,-16,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,69,71,72,73,74,75,80,81,82,84,86,92,93,94,95,96,97,99,100,101,102,103,],[-47,18,-2,-1,-3,-4,-5,-6,-7,-8,-9,-40,18,18,18,18,18,-41,-42,-43,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-40,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-20,-21,-22,-23,-24,-44,-47,-47,18,18,79,-47,-14,-15,18,-17,-19,79,-47,-47,79,-47,18,18,18,-18,-10,-47,-16,]),'TRUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,69,71,72,74,75,80,81,82,84,92,93,95,96,97,99,100,101,102,103,],[-47,19,-2,-1,-3,-4,-5,-6,-7,-8,-9,-40,19,19,19,19,19,-41,-42,-43,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-40,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-20,-21,-22,-23,-24,-44,-47,-47,19,19,-47,-14,-15,19,-17,-19,-47,-47,-47,19,19,19,-18,-10,-47,-16,]),'FALSE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,69,71,72,74,75,80,81,82,84,92,93,95,96,97,99,100,101,102,103,],[-47,20,-2,-1,-3,-4,-5,-6,-7,-8,-9,-40,20,20,20,20,20,-41,-42,-43,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-40,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-20,-21,-22,-23,-24,-44,-47,-47,20,20,-47,-14,-15,20,-17,-19,-47,-47,-47,20,20,20,-18,-10,-47,-16,]),'LPRAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,69,70,71,72,74,75,80,81,82,84,92,93,95,96,97,99,100,101,102,103,],[-47,15,-2,-1,-3,-4,-5,-6,-7,-8,-9,-40,15,15,15,15,15,-41,-42,-43,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-40,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-20,-21,-22,-23,-24,-44,-47,-47,73,15,15,-47,-14,-15,15,-17,-19,-47,-47,-47,15,15,15,-18,-10,-47,-16,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,74,75,80,82,84,100,101,102,103,],[-47,0,-2,-1,-3,-4,-5,-6,-7,-8,-9,-40,-41,-42,-43,-40,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-20,-21,-22,-23,-24,-44,-47,-14,-15,-17,-19,-18,-10,-47,-16,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,18,19,20,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,68,69,71,72,74,75,80,82,84,92,93,95,96,97,99,100,101,102,103,],[-2,-1,-3,-4,-5,-6,-7,-8,-9,-40,-41,-42,-43,-40,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-20,-21,-22,-23,-24,-44,-47,-47,74,75,-47,-14,-15,-17,-19,-47,-47,-47,100,101,102,-18,-10,-47,-16,]),'TIMES':([8,11,18,19,20,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,87,],[23,-40,-41,-42,-43,23,-40,23,23,-25,-26,23,23,-29,-30,-31,23,23,23,23,23,23,23,23,23,23,23,23,23,-44,23,]),'DIV':([8,11,18,19,20,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,87,],[24,-40,-41,-42,-43,24,-40,24,24,-25,-26,24,24,-29,-30,-31,24,24,24,24,24,24,24,24,24,24,24,24,24,-44,24,]),'MOD':([8,11,18,19,20,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,87,],[25,-40,-41,-42,-43,25,-40,25,25,-25,-26,25,25,-29,-30,-31,25,25,25,25,25,25,25,25,25,25,25,25,25,-44,25,]),'AND':([8,11,18,19,20,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,87,],[26,-40,-41,-42,-43,26,-40,26,26,-25,-26,-27,-28,-29,-30,-31,None,None,None,None,None,None,None,None,26,26,26,26,26,-44,26,]),'OR':([8,11,18,19,20,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,87,],[27,-40,-41,-42,-43,27,-40,27,27,-25,-26,-27,-28,-29,-30,-31,None,None,None,None,None,None,None,None,27,27,27,27,27,-44,27,]),'LT':([8,11,18,19,20,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,87,],[28,-40,-41,-42,-43,28,-40,28,28,-25,-26,-27,-28,-29,-30,-31,None,None,None,None,None,None,None,None,28,28,28,28,28,-44,28,]),'LTE':([8,11,18,19,20,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,87,],[29,-40,-41,-42,-43,29,-40,29,29,-25,-26,-27,-28,-29,-30,-31,None,None,None,None,None,None,None,None,29,29,29,29,29,-44,29,]),'GT':([8,11,18,19,20,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,87,],[30,-40,-41,-42,-43,30,-40,30,30,-25,-26,-27,-28,-29,-30,-31,None,None,None,None,None,None,None,None,30,30,30,30,30,-44,30,]),'GTE':([8,11,18,19,20,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,87,],[31,-40,-41,-42,-43,31,-40,31,31,-25,-26,-27,-28,-29,-30,-31,None,None,None,None,None,None,None,None,31,31,31,31,31,-44,31,]),'EQU':([8,11,18,19,20,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,87,],[32,-40,-41,-42,-43,32,-40,32,32,-25,-26,-27,-28,-29,-30,-31,None,None,None,None,None,None,None,None,32,32,32,32,32,-44,32,]),'NEQU':([8,11,18,19,20,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,87,],[33,-40,-41,-42,-43,33,-40,33,33,-25,-26,-27,-28,-29,-30,-31,None,None,None,None,None,None,None,None,33,33,33,33,33,-44,33,]),'EQ':([11,],[34,]),'PLUS_EQUAL':([11,],[35,]),'MINUS_EQUAL':([11,],[36,]),'TIMES_EQUAL':([11,],[37,]),'DIV_EQUAL':([11,],[38,]),'COLON':([18,19,20,39,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,67,83,85,87,],[-41,-42,-43,64,-40,65,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-44,88,89,91,]),'RPRAN':([18,19,20,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,67,76,77,78,79,90,98,],[-41,-42,-43,-40,67,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-44,-46,85,-11,-45,-12,-13,]),'IN':([42,],[66,]),'LBRACE':([64,65,88,89,91,],[68,69,92,93,95,]),'RANGE':([66,],[70,]),'ELIF':([74,102,],[81,81,]),'ELSE':([74,102,],[83,83,]),'SEP':([76,78,79,90,],[-46,86,-45,94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,68,69,92,93,95,],[1,71,72,96,97,99,]),'empty':([0,68,69,74,92,93,95,102,],[2,2,2,84,2,2,2,84,]),'statement':([1,71,72,96,97,99,],[3,3,3,3,3,3,]),'assignment':([1,71,72,96,97,99,],[4,4,4,4,4,4,]),'if':([1,71,72,96,97,99,],[5,5,5,5,5,5,]),'while':([1,71,72,96,97,99,],[6,6,6,6,6,6,]),'for':([1,71,72,96,97,99,],[7,7,7,7,7,7,]),'expr':([1,12,13,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,71,72,81,96,97,99,],[8,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,8,8,87,8,8,8,]),'params':([73,],[77,]),'num_or_id':([73,86,94,],[78,90,98,]),'elif':([74,102,],[80,103,]),'else':([74,102,],[82,82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',41),
  ('statements -> empty','statements',1,'p_statements','parser.py',42),
  ('statement -> assignment','statement',1,'p_statement','parser.py',52),
  ('statement -> if','statement',1,'p_statement','parser.py',53),
  ('statement -> while','statement',1,'p_statement','parser.py',54),
  ('statement -> for','statement',1,'p_statement','parser.py',55),
  ('statement -> expr','statement',1,'p_statement','parser.py',56),
  ('statement -> CONTINUE','statement',1,'p_statement','parser.py',57),
  ('statement -> BREAK','statement',1,'p_statement','parser.py',58),
  ('for -> FOR ID IN RANGE LPRAN params RPRAN COLON LBRACE statements RBRACE','for',11,'p_for','parser.py',64),
  ('params -> num_or_id','params',1,'p_params','parser.py',70),
  ('params -> num_or_id SEP num_or_id','params',3,'p_params','parser.py',71),
  ('params -> num_or_id SEP num_or_id SEP num_or_id','params',5,'p_params','parser.py',72),
  ('while -> WHILE expr COLON LBRACE statements RBRACE','while',6,'p_while','parser.py',83),
  ('if -> IF expr COLON LBRACE statements RBRACE elif','if',7,'p_if','parser.py',89),
  ('elif -> ELIF expr COLON LBRACE statements RBRACE elif','elif',7,'p_elif','parser.py',95),
  ('elif -> else','elif',1,'p_elif','parser.py',96),
  ('else -> ELSE COLON LBRACE statements RBRACE','else',5,'p_else','parser.py',105),
  ('else -> empty','else',1,'p_else','parser.py',106),
  ('assignment -> ID EQ expr','assignment',3,'p_assignment','parser.py',113),
  ('assignment -> ID PLUS_EQUAL expr','assignment',3,'p_assignment','parser.py',114),
  ('assignment -> ID MINUS_EQUAL expr','assignment',3,'p_assignment','parser.py',115),
  ('assignment -> ID TIMES_EQUAL expr','assignment',3,'p_assignment','parser.py',116),
  ('assignment -> ID DIV_EQUAL expr','assignment',3,'p_assignment','parser.py',117),
  ('expr -> MINUS expr','expr',2,'p_exr_unary_minus','parser.py',123),
  ('expr -> PLUS expr','expr',2,'p_exr_unary_plus','parser.py',129),
  ('expr -> expr PLUS expr','expr',3,'p_expr_operator_relop','parser.py',135),
  ('expr -> expr MINUS expr','expr',3,'p_expr_operator_relop','parser.py',136),
  ('expr -> expr TIMES expr','expr',3,'p_expr_operator_relop','parser.py',137),
  ('expr -> expr DIV expr','expr',3,'p_expr_operator_relop','parser.py',138),
  ('expr -> expr MOD expr','expr',3,'p_expr_operator_relop','parser.py',139),
  ('expr -> expr AND expr','expr',3,'p_expr_operator_relop','parser.py',140),
  ('expr -> expr OR expr','expr',3,'p_expr_operator_relop','parser.py',141),
  ('expr -> expr LT expr','expr',3,'p_expr_operator_relop','parser.py',142),
  ('expr -> expr LTE expr','expr',3,'p_expr_operator_relop','parser.py',143),
  ('expr -> expr GT expr','expr',3,'p_expr_operator_relop','parser.py',144),
  ('expr -> expr GTE expr','expr',3,'p_expr_operator_relop','parser.py',145),
  ('expr -> expr EQU expr','expr',3,'p_expr_operator_relop','parser.py',146),
  ('expr -> expr NEQU expr','expr',3,'p_expr_operator_relop','parser.py',147),
  ('expr -> ID','expr',1,'p_expr_operator_relop','parser.py',148),
  ('expr -> NUMBER','expr',1,'p_expr_operator_relop','parser.py',149),
  ('expr -> TRUE','expr',1,'p_expr_operator_relop','parser.py',150),
  ('expr -> FALSE','expr',1,'p_expr_operator_relop','parser.py',151),
  ('expr -> LPRAN expr RPRAN','expr',3,'p_expr_pran','parser.py',161),
  ('num_or_id -> NUMBER','num_or_id',1,'p_num_or_id','parser.py',168),
  ('num_or_id -> ID','num_or_id',1,'p_num_or_id','parser.py',169),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',174),
]
