
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocGTEGTLTELTEQUNEQUANDORleftPLUSMINUSleftTIMESDIVMODAND BREAK COLON COMMENTS CONTINUE DIV DIV_EQUAL ELIF ELSE EQ EQU FALSE FOR GT GTE ID IF IN LBRACE LPRAN LT LTE MINUS MINUS_EQUAL MOD NEQU NOT NUMBER OR PLUS PLUS_EQUAL RANGE RBRACE RPRAN SEP TIMES TIMES_EQUAL TRUE WHILE\n        statements : statements statement\n        | empty\n        \n        statement : assignment\n                    | if\n                    | while\n                    | for\n                    | expr\n                    | CONTINUE\n                    | BREAK\n        \n        for : FOR ID IN RANGE LPRAN params RPRAN COLON LBRACE statements RBRACE\n        \n        params : num_or_id\n            |   num_or_id SEP num_or_id\n            | num_or_id SEP num_or_id SEP num_or_id\n        \n        while : WHILE expr COLON LBRACE statements RBRACE\n        \n        if : IF expr COLON LBRACE statements RBRACE elif\n        \n        elif : ELIF expr COLON LBRACE statements RBRACE elif\n        | else\n        \n        else : ELSE COLON LBRACE statements RBRACE\n        | empty\n        \n        assignment : ID EQ expr\n                   | ID PLUS_EQUAL expr\n                   | ID MINUS_EQUAL expr\n                   | ID TIMES_EQUAL expr\n                   | ID DIV_EQUAL expr\n        \n        expr : expr PLUS expr\n        | expr MINUS expr\n        | expr TIMES expr\n        | expr DIV expr\n        | expr MOD expr\n        | expr AND expr\n        | expr OR expr\n        | expr LT expr\n        | expr LTE expr\n        | expr GT expr\n        | expr GTE expr\n        | expr EQU expr\n        | expr NEQU expr\n        | ID\n        | NUMBER\n        | TRUE\n        | FALSE\n        \n        expr : LPRAN expr RPRAN\n\n        \n        num_or_id : NUMBER\n                | ID\n        empty :'
    
_lr_action_items = {'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,67,68,70,71,76,78,80,88,89,91,92,93,95,96,97,98,99,],[-45,9,-2,-1,-3,-4,-5,-6,-7,-8,-9,-38,-39,-40,-41,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-21,-22,-23,-24,-42,-45,-45,9,9,-45,-14,-15,-17,-19,-45,-45,-45,9,9,9,-18,-10,-45,-16,]),'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,67,68,70,71,76,78,80,88,89,91,92,93,95,96,97,98,99,],[-45,10,-2,-1,-3,-4,-5,-6,-7,-8,-9,-38,-39,-40,-41,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-21,-22,-23,-24,-42,-45,-45,10,10,-45,-14,-15,-17,-19,-45,-45,-45,10,10,10,-18,-10,-45,-16,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,67,68,69,70,71,76,77,78,80,82,88,89,90,91,92,93,95,96,97,98,99,],[-45,11,-2,-1,-3,-4,-5,-6,-7,-8,-9,-38,38,38,40,38,-39,-40,-41,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-21,-22,-23,-24,-42,-45,-45,11,11,72,-45,-14,-15,38,-17,-19,72,-45,-45,72,-45,11,11,11,-18,-10,-45,-16,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,67,68,70,71,76,78,80,88,89,91,92,93,95,96,97,98,99,],[-45,12,-2,-1,-3,-4,-5,-6,-7,-8,-9,-38,-39,-40,-41,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-21,-22,-23,-24,-42,-45,-45,12,12,-45,-14,-15,-17,-19,-45,-45,-45,12,12,12,-18,-10,-45,-16,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,67,68,70,71,76,78,80,88,89,91,92,93,95,96,97,98,99,],[-45,13,-2,-1,-3,-4,-5,-6,-7,-8,-9,-38,-39,-40,-41,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-21,-22,-23,-24,-42,-45,-45,13,13,-45,-14,-15,-17,-19,-45,-45,-45,13,13,13,-18,-10,-45,-16,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,67,68,70,71,76,78,80,88,89,91,92,93,95,96,97,98,99,],[-45,14,-2,-1,-3,-4,-5,-6,-7,-8,-9,-38,-39,-40,-41,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-21,-22,-23,-24,-42,-45,-45,14,14,-45,-14,-15,-17,-19,-45,-45,-45,14,14,14,-18,-10,-45,-16,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,67,68,69,70,71,76,77,78,80,82,88,89,90,91,92,93,95,96,97,98,99,],[-45,16,-2,-1,-3,-4,-5,-6,-7,-8,-9,-38,16,16,16,-39,-40,-41,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-21,-22,-23,-24,-42,-45,-45,16,16,75,-45,-14,-15,16,-17,-19,75,-45,-45,75,-45,16,16,16,-18,-10,-45,-16,]),'TRUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,67,68,70,71,76,77,78,80,88,89,91,92,93,95,96,97,98,99,],[-45,17,-2,-1,-3,-4,-5,-6,-7,-8,-9,-38,17,17,17,-39,-40,-41,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-21,-22,-23,-24,-42,-45,-45,17,17,-45,-14,-15,17,-17,-19,-45,-45,-45,17,17,17,-18,-10,-45,-16,]),'FALSE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,67,68,70,71,76,77,78,80,88,89,91,92,93,95,96,97,98,99,],[-45,18,-2,-1,-3,-4,-5,-6,-7,-8,-9,-38,18,18,18,-39,-40,-41,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-21,-22,-23,-24,-42,-45,-45,18,18,-45,-14,-15,18,-17,-19,-45,-45,-45,18,18,18,-18,-10,-45,-16,]),'LPRAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,68,70,71,76,77,78,80,88,89,91,92,93,95,96,97,98,99,],[-45,15,-2,-1,-3,-4,-5,-6,-7,-8,-9,-38,15,15,15,-39,-40,-41,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-21,-22,-23,-24,-42,-45,-45,69,15,15,-45,-14,-15,15,-17,-19,-45,-45,-45,15,15,15,-18,-10,-45,-16,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,70,71,76,78,80,96,97,98,99,],[-45,0,-2,-1,-3,-4,-5,-6,-7,-8,-9,-38,-39,-40,-41,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-21,-22,-23,-24,-42,-45,-14,-15,-17,-19,-18,-10,-45,-16,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,16,17,18,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,67,68,70,71,76,78,80,88,89,91,92,93,95,96,97,98,99,],[-2,-1,-3,-4,-5,-6,-7,-8,-9,-38,-39,-40,-41,-38,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-21,-22,-23,-24,-42,-45,-45,70,71,-45,-14,-15,-17,-19,-45,-45,-45,96,97,98,-18,-10,-45,-16,]),'PLUS':([8,11,16,17,18,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,83,],[19,-38,-39,-40,-41,19,-38,19,19,-25,-26,-27,-28,-29,19,19,19,19,19,19,19,19,19,19,19,19,19,-42,19,]),'MINUS':([8,11,16,17,18,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,83,],[20,-38,-39,-40,-41,20,-38,20,20,-25,-26,-27,-28,-29,20,20,20,20,20,20,20,20,20,20,20,20,20,-42,20,]),'TIMES':([8,11,16,17,18,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,83,],[21,-38,-39,-40,-41,21,-38,21,21,21,21,-27,-28,-29,21,21,21,21,21,21,21,21,21,21,21,21,21,-42,21,]),'DIV':([8,11,16,17,18,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,83,],[22,-38,-39,-40,-41,22,-38,22,22,22,22,-27,-28,-29,22,22,22,22,22,22,22,22,22,22,22,22,22,-42,22,]),'MOD':([8,11,16,17,18,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,83,],[23,-38,-39,-40,-41,23,-38,23,23,23,23,-27,-28,-29,23,23,23,23,23,23,23,23,23,23,23,23,23,-42,23,]),'AND':([8,11,16,17,18,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,83,],[24,-38,-39,-40,-41,24,-38,24,24,-25,-26,-27,-28,-29,None,None,None,None,None,None,None,None,24,24,24,24,24,-42,24,]),'OR':([8,11,16,17,18,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,83,],[25,-38,-39,-40,-41,25,-38,25,25,-25,-26,-27,-28,-29,None,None,None,None,None,None,None,None,25,25,25,25,25,-42,25,]),'LT':([8,11,16,17,18,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,83,],[26,-38,-39,-40,-41,26,-38,26,26,-25,-26,-27,-28,-29,None,None,None,None,None,None,None,None,26,26,26,26,26,-42,26,]),'LTE':([8,11,16,17,18,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,83,],[27,-38,-39,-40,-41,27,-38,27,27,-25,-26,-27,-28,-29,None,None,None,None,None,None,None,None,27,27,27,27,27,-42,27,]),'GT':([8,11,16,17,18,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,83,],[28,-38,-39,-40,-41,28,-38,28,28,-25,-26,-27,-28,-29,None,None,None,None,None,None,None,None,28,28,28,28,28,-42,28,]),'GTE':([8,11,16,17,18,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,83,],[29,-38,-39,-40,-41,29,-38,29,29,-25,-26,-27,-28,-29,None,None,None,None,None,None,None,None,29,29,29,29,29,-42,29,]),'EQU':([8,11,16,17,18,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,83,],[30,-38,-39,-40,-41,30,-38,30,30,-25,-26,-27,-28,-29,None,None,None,None,None,None,None,None,30,30,30,30,30,-42,30,]),'NEQU':([8,11,16,17,18,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,83,],[31,-38,-39,-40,-41,31,-38,31,31,-25,-26,-27,-28,-29,None,None,None,None,None,None,None,None,31,31,31,31,31,-42,31,]),'EQ':([11,],[32,]),'PLUS_EQUAL':([11,],[33,]),'MINUS_EQUAL':([11,],[34,]),'TIMES_EQUAL':([11,],[35,]),'DIV_EQUAL':([11,],[36,]),'COLON':([16,17,18,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,63,79,81,83,],[-39,-40,-41,60,-38,61,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-42,84,85,87,]),'RPRAN':([16,17,18,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,63,72,73,74,75,86,94,],[-39,-40,-41,-38,63,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-42,-44,81,-11,-43,-12,-13,]),'IN':([40,],[62,]),'LBRACE':([60,61,84,85,87,],[64,65,88,89,91,]),'RANGE':([62,],[66,]),'ELIF':([70,98,],[77,77,]),'ELSE':([70,98,],[79,79,]),'SEP':([72,74,75,86,],[-44,82,-43,90,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,64,65,88,89,91,],[1,67,68,92,93,95,]),'empty':([0,64,65,70,88,89,91,98,],[2,2,2,80,2,2,2,80,]),'statement':([1,67,68,92,93,95,],[3,3,3,3,3,3,]),'assignment':([1,67,68,92,93,95,],[4,4,4,4,4,4,]),'if':([1,67,68,92,93,95,],[5,5,5,5,5,5,]),'while':([1,67,68,92,93,95,],[6,6,6,6,6,6,]),'for':([1,67,68,92,93,95,],[7,7,7,7,7,7,]),'expr':([1,12,13,15,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,67,68,77,92,93,95,],[8,37,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,8,8,83,8,8,8,]),'params':([69,],[73,]),'num_or_id':([69,82,90,],[74,86,94,]),'elif':([70,98,],[76,99,]),'else':([70,98,],[78,78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',43),
  ('statements -> empty','statements',1,'p_statements','parser.py',44),
  ('statement -> assignment','statement',1,'p_statement','parser.py',54),
  ('statement -> if','statement',1,'p_statement','parser.py',55),
  ('statement -> while','statement',1,'p_statement','parser.py',56),
  ('statement -> for','statement',1,'p_statement','parser.py',57),
  ('statement -> expr','statement',1,'p_statement','parser.py',58),
  ('statement -> CONTINUE','statement',1,'p_statement','parser.py',59),
  ('statement -> BREAK','statement',1,'p_statement','parser.py',60),
  ('for -> FOR ID IN RANGE LPRAN params RPRAN COLON LBRACE statements RBRACE','for',11,'p_for','parser.py',66),
  ('params -> num_or_id','params',1,'p_params','parser.py',72),
  ('params -> num_or_id SEP num_or_id','params',3,'p_params','parser.py',73),
  ('params -> num_or_id SEP num_or_id SEP num_or_id','params',5,'p_params','parser.py',74),
  ('while -> WHILE expr COLON LBRACE statements RBRACE','while',6,'p_while','parser.py',85),
  ('if -> IF expr COLON LBRACE statements RBRACE elif','if',7,'p_if','parser.py',91),
  ('elif -> ELIF expr COLON LBRACE statements RBRACE elif','elif',7,'p_elif','parser.py',97),
  ('elif -> else','elif',1,'p_elif','parser.py',98),
  ('else -> ELSE COLON LBRACE statements RBRACE','else',5,'p_else','parser.py',107),
  ('else -> empty','else',1,'p_else','parser.py',108),
  ('assignment -> ID EQ expr','assignment',3,'p_assignment','parser.py',115),
  ('assignment -> ID PLUS_EQUAL expr','assignment',3,'p_assignment','parser.py',116),
  ('assignment -> ID MINUS_EQUAL expr','assignment',3,'p_assignment','parser.py',117),
  ('assignment -> ID TIMES_EQUAL expr','assignment',3,'p_assignment','parser.py',118),
  ('assignment -> ID DIV_EQUAL expr','assignment',3,'p_assignment','parser.py',119),
  ('expr -> expr PLUS expr','expr',3,'p_expr_operator_relop','parser.py',125),
  ('expr -> expr MINUS expr','expr',3,'p_expr_operator_relop','parser.py',126),
  ('expr -> expr TIMES expr','expr',3,'p_expr_operator_relop','parser.py',127),
  ('expr -> expr DIV expr','expr',3,'p_expr_operator_relop','parser.py',128),
  ('expr -> expr MOD expr','expr',3,'p_expr_operator_relop','parser.py',129),
  ('expr -> expr AND expr','expr',3,'p_expr_operator_relop','parser.py',130),
  ('expr -> expr OR expr','expr',3,'p_expr_operator_relop','parser.py',131),
  ('expr -> expr LT expr','expr',3,'p_expr_operator_relop','parser.py',132),
  ('expr -> expr LTE expr','expr',3,'p_expr_operator_relop','parser.py',133),
  ('expr -> expr GT expr','expr',3,'p_expr_operator_relop','parser.py',134),
  ('expr -> expr GTE expr','expr',3,'p_expr_operator_relop','parser.py',135),
  ('expr -> expr EQU expr','expr',3,'p_expr_operator_relop','parser.py',136),
  ('expr -> expr NEQU expr','expr',3,'p_expr_operator_relop','parser.py',137),
  ('expr -> ID','expr',1,'p_expr_operator_relop','parser.py',138),
  ('expr -> NUMBER','expr',1,'p_expr_operator_relop','parser.py',139),
  ('expr -> TRUE','expr',1,'p_expr_operator_relop','parser.py',140),
  ('expr -> FALSE','expr',1,'p_expr_operator_relop','parser.py',141),
  ('expr -> LPRAN expr RPRAN','expr',3,'p_expr_pran','parser.py',150),
  ('num_or_id -> NUMBER','num_or_id',1,'p_num_or_id','parser.py',157),
  ('num_or_id -> ID','num_or_id',1,'p_num_or_id','parser.py',158),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',163),
]
