
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocGTEGTLTELTEQUNEQUANDORrightPLUSMINUSrightTIMESDIVMODrightNOTAND BREAK COLON COMMENTS CONTINUE DIV ELIF ELSE EQ EQU FOR GT GTE ID IF IN LBRACE LPRAN LT LTE MINUS MOD NEQU NOT NUMBER OR PLUS RANGE RBRACE RPRAN SEP TIMES WHILE\n        statements : statements statement\n        | empty\n        \n        statement : assignment\n        | if\n        | expr\n        \n        if : IF expr COLON LBRACE statements RBRACE elif\n        \n        elif : ELIF expr COLON LBRACE statements RBRACE elif\n        | else\n        \n        else : ELSE COLON LBRACE statements RBRACE\n        | empty\n        \n        assignment : ID EQ expr\n        \n        expr : expr operator expr\n        | expr relop expr\n        | expr logic expr\n        | ID\n        | NUMBER\n        \n        operator : TIMES\n                | DIV\n                |  PLUS\n                |  MINUS\n                |  MOD\n        \n        logic : AND\n              | OR\n        \n        relop : LT\n                | LTE\n                |  GT\n                |  GTE\n                |  EQU\n                |  NEQU\n        \n        expr : LPRAN expr RPRAN\n        empty :'
    
_lr_action_items = {'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,36,37,38,39,40,41,42,44,48,49,50,51,52,53,54,],[-31,7,-2,-1,-3,-4,-5,-15,29,-16,29,29,29,29,-17,-18,-19,-20,-21,-24,-25,-26,-27,-28,-29,-22,-23,29,-15,-12,-13,-14,-11,-30,-31,7,-31,-6,29,-8,-10,-31,-31,7,7,-9,-31,-7,]),'IF':([0,1,2,3,4,5,6,7,9,29,31,32,33,34,36,37,38,39,40,42,44,48,49,50,51,52,53,54,],[-31,8,-2,-1,-3,-4,-5,-15,-16,-15,-12,-13,-14,-11,-30,-31,8,-31,-6,-8,-10,-31,-31,8,8,-9,-31,-7,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,36,37,38,39,40,41,42,44,48,49,50,51,52,53,54,],[-31,9,-2,-1,-3,-4,-5,-15,9,-16,9,9,9,9,-17,-18,-19,-20,-21,-24,-25,-26,-27,-28,-29,-22,-23,9,-15,-12,-13,-14,-11,-30,-31,9,-31,-6,9,-8,-10,-31,-31,9,9,-9,-31,-7,]),'LPRAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,36,37,38,39,40,41,42,44,48,49,50,51,52,53,54,],[-31,10,-2,-1,-3,-4,-5,-15,10,-16,10,10,10,10,-17,-18,-19,-20,-21,-24,-25,-26,-27,-28,-29,-22,-23,10,-15,-12,-13,-14,-11,-30,-31,10,-31,-6,10,-8,-10,-31,-31,10,10,-9,-31,-7,]),'$end':([0,1,2,3,4,5,6,7,9,29,31,32,33,34,36,39,40,42,44,52,53,54,],[-31,0,-2,-1,-3,-4,-5,-15,-16,-15,-12,-13,-14,-11,-30,-31,-6,-8,-10,-9,-31,-7,]),'RBRACE':([2,3,4,5,6,7,9,29,31,32,33,34,36,37,38,39,40,42,44,48,49,50,51,52,53,54,],[-2,-1,-3,-4,-5,-15,-16,-15,-12,-13,-14,-11,-30,-31,39,-31,-6,-8,-10,-31,-31,52,53,-9,-31,-7,]),'TIMES':([6,7,9,28,29,30,31,32,33,34,36,45,],[14,-15,-16,14,-15,14,14,14,14,14,-30,14,]),'DIV':([6,7,9,28,29,30,31,32,33,34,36,45,],[15,-15,-16,15,-15,15,15,15,15,15,-30,15,]),'PLUS':([6,7,9,28,29,30,31,32,33,34,36,45,],[16,-15,-16,16,-15,16,16,16,16,16,-30,16,]),'MINUS':([6,7,9,28,29,30,31,32,33,34,36,45,],[17,-15,-16,17,-15,17,17,17,17,17,-30,17,]),'MOD':([6,7,9,28,29,30,31,32,33,34,36,45,],[18,-15,-16,18,-15,18,18,18,18,18,-30,18,]),'LT':([6,7,9,28,29,30,31,32,33,34,36,45,],[19,-15,-16,19,-15,19,19,19,19,19,-30,19,]),'LTE':([6,7,9,28,29,30,31,32,33,34,36,45,],[20,-15,-16,20,-15,20,20,20,20,20,-30,20,]),'GT':([6,7,9,28,29,30,31,32,33,34,36,45,],[21,-15,-16,21,-15,21,21,21,21,21,-30,21,]),'GTE':([6,7,9,28,29,30,31,32,33,34,36,45,],[22,-15,-16,22,-15,22,22,22,22,22,-30,22,]),'EQU':([6,7,9,28,29,30,31,32,33,34,36,45,],[23,-15,-16,23,-15,23,23,23,23,23,-30,23,]),'NEQU':([6,7,9,28,29,30,31,32,33,34,36,45,],[24,-15,-16,24,-15,24,24,24,24,24,-30,24,]),'AND':([6,7,9,28,29,30,31,32,33,34,36,45,],[25,-15,-16,25,-15,25,25,25,25,25,-30,25,]),'OR':([6,7,9,28,29,30,31,32,33,34,36,45,],[26,-15,-16,26,-15,26,26,26,26,26,-30,26,]),'EQ':([7,],[27,]),'COLON':([9,28,29,31,32,33,36,43,45,],[-16,35,-15,-12,-13,-14,-30,46,47,]),'RPRAN':([9,29,30,31,32,33,36,],[-16,-15,36,-12,-13,-14,-30,]),'LBRACE':([35,46,47,],[37,48,49,]),'ELIF':([39,53,],[41,41,]),'ELSE':([39,53,],[43,43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,37,48,49,],[1,38,50,51,]),'empty':([0,37,39,48,49,53,],[2,2,44,2,2,44,]),'statement':([1,38,50,51,],[3,3,3,3,]),'assignment':([1,38,50,51,],[4,4,4,4,]),'if':([1,38,50,51,],[5,5,5,5,]),'expr':([1,8,10,11,12,13,27,38,41,50,51,],[6,28,30,31,32,33,34,6,45,6,6,]),'operator':([6,28,30,31,32,33,34,45,],[11,11,11,11,11,11,11,11,]),'relop':([6,28,30,31,32,33,34,45,],[12,12,12,12,12,12,12,12,]),'logic':([6,28,30,31,32,33,34,45,],[13,13,13,13,13,13,13,13,]),'elif':([39,53,],[40,54,]),'else':([39,53,],[42,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',23),
  ('statements -> empty','statements',1,'p_statements','parser.py',24),
  ('statement -> assignment','statement',1,'p_statement','parser.py',34),
  ('statement -> if','statement',1,'p_statement','parser.py',35),
  ('statement -> expr','statement',1,'p_statement','parser.py',36),
  ('if -> IF expr COLON LBRACE statements RBRACE elif','if',7,'p_if','parser.py',42),
  ('elif -> ELIF expr COLON LBRACE statements RBRACE elif','elif',7,'p_elif','parser.py',48),
  ('elif -> else','elif',1,'p_elif','parser.py',49),
  ('else -> ELSE COLON LBRACE statements RBRACE','else',5,'p_else','parser.py',55),
  ('else -> empty','else',1,'p_else','parser.py',56),
  ('assignment -> ID EQ expr','assignment',3,'p_assignment','parser.py',62),
  ('expr -> expr operator expr','expr',3,'p_expr_operator_relop','parser.py',68),
  ('expr -> expr relop expr','expr',3,'p_expr_operator_relop','parser.py',69),
  ('expr -> expr logic expr','expr',3,'p_expr_operator_relop','parser.py',70),
  ('expr -> ID','expr',1,'p_expr_operator_relop','parser.py',71),
  ('expr -> NUMBER','expr',1,'p_expr_operator_relop','parser.py',72),
  ('operator -> TIMES','operator',1,'p_operator','parser.py',81),
  ('operator -> DIV','operator',1,'p_operator','parser.py',82),
  ('operator -> PLUS','operator',1,'p_operator','parser.py',83),
  ('operator -> MINUS','operator',1,'p_operator','parser.py',84),
  ('operator -> MOD','operator',1,'p_operator','parser.py',85),
  ('logic -> AND','logic',1,'p_logic','parser.py',91),
  ('logic -> OR','logic',1,'p_logic','parser.py',92),
  ('relop -> LT','relop',1,'p_relop','parser.py',98),
  ('relop -> LTE','relop',1,'p_relop','parser.py',99),
  ('relop -> GT','relop',1,'p_relop','parser.py',100),
  ('relop -> GTE','relop',1,'p_relop','parser.py',101),
  ('relop -> EQU','relop',1,'p_relop','parser.py',102),
  ('relop -> NEQU','relop',1,'p_relop','parser.py',103),
  ('expr -> LPRAN expr RPRAN','expr',3,'p_expr_pran','parser.py',109),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',114),
]
