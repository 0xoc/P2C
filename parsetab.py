
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocGTEGTLTELTEQUNEQUANDORrightPLUSMINUSrightTIMESDIVMODrightNOTAND BREAK COLON COMMENTS CONTINUE DIV DIV_EQUAL ELIF ELSE EQ EQU FALSE FOR GT GTE ID IF IN LBRACE LPRAN LT LTE MINUS MINUS_EQUAL MOD NEQU NOT NUMBER OR PLUS PLUS_EQUAL RANGE RBRACE RPRAN SEP TIMES TIMES_EQUAL TRUE WHILE\n        statements : statements statement\n        | empty\n        \n        statement : assignment\n        | if\n        | while\n        | for\n        | expr\n        | CONTINUE\n        | BREAK\n        \n        for : FOR ID IN RANGE LPRAN params RPRAN COLON LBRACE statements RBRACE\n        \n        params : num_or_id\n            |   num_or_id SEP num_or_id\n            | num_or_id SEP num_or_id SEP num_or_id\n        \n        num_or_id : NUMBER\n                | ID\n        \n        while : WHILE expr COLON LBRACE statements RBRACE\n        \n        if : IF expr COLON LBRACE statements RBRACE elif\n        \n        elif : ELIF expr COLON LBRACE statements RBRACE elif\n        | else\n        \n        else : ELSE COLON LBRACE statements RBRACE\n        | empty\n        \n        assignment : ID EQ expr\n                   | ID PLUS_EQUAL expr\n                   | ID MINUS_EQUAL expr\n                   | ID TIMES_EQUAL expr\n        \n        expr : expr operator expr\n        | expr relop expr\n        | expr logic expr\n        | ID\n        | NUMBER\n        | TRUE\n        | FALSE\n        \n        operator : TIMES\n                | DIV\n                |  PLUS\n                |  MINUS\n                |  MOD\n        \n        logic : AND\n              | OR\n        \n        relop : LT\n                | LTE\n                |  GT\n                |  GTE\n                |  EQU\n                |  NEQU\n        \n        expr : LPRAN expr RPRAN\n        empty :'
    
_lr_action_items = {'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,40,44,45,46,47,48,49,50,54,55,56,58,59,61,62,67,69,71,79,80,82,83,84,86,87,88,89,90,],[-47,9,-2,-1,-3,-4,-5,-6,-7,-8,-9,-29,-30,-31,-32,-29,-26,-27,-28,-22,-23,-24,-25,-46,-47,-47,9,9,-47,-16,-17,-19,-21,-47,-47,-47,9,9,9,-20,-10,-47,-18,]),'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,40,44,45,46,47,48,49,50,54,55,56,58,59,61,62,67,69,71,79,80,82,83,84,86,87,88,89,90,],[-47,10,-2,-1,-3,-4,-5,-6,-7,-8,-9,-29,-30,-31,-32,-29,-26,-27,-28,-22,-23,-24,-25,-46,-47,-47,10,10,-47,-16,-17,-19,-21,-47,-47,-47,10,10,10,-20,-10,-47,-18,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,44,45,46,47,48,49,50,54,55,56,58,59,60,61,62,67,68,69,71,73,79,80,81,82,83,84,86,87,88,89,90,],[-47,11,-2,-1,-3,-4,-5,-6,-7,-8,-9,-29,40,40,42,40,-30,-31,-32,40,40,40,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,-45,-38,-39,40,40,40,40,-29,-26,-27,-28,-22,-23,-24,-25,-46,-47,-47,11,11,63,-47,-16,-17,40,-19,-21,63,-47,-47,63,-47,11,11,11,-20,-10,-47,-18,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,40,44,45,46,47,48,49,50,54,55,56,58,59,61,62,67,69,71,79,80,82,83,84,86,87,88,89,90,],[-47,12,-2,-1,-3,-4,-5,-6,-7,-8,-9,-29,-30,-31,-32,-29,-26,-27,-28,-22,-23,-24,-25,-46,-47,-47,12,12,-47,-16,-17,-19,-21,-47,-47,-47,12,12,12,-20,-10,-47,-18,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,40,44,45,46,47,48,49,50,54,55,56,58,59,61,62,67,69,71,79,80,82,83,84,86,87,88,89,90,],[-47,13,-2,-1,-3,-4,-5,-6,-7,-8,-9,-29,-30,-31,-32,-29,-26,-27,-28,-22,-23,-24,-25,-46,-47,-47,13,13,-47,-16,-17,-19,-21,-47,-47,-47,13,13,13,-20,-10,-47,-18,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,40,44,45,46,47,48,49,50,54,55,56,58,59,61,62,67,69,71,79,80,82,83,84,86,87,88,89,90,],[-47,14,-2,-1,-3,-4,-5,-6,-7,-8,-9,-29,-30,-31,-32,-29,-26,-27,-28,-22,-23,-24,-25,-46,-47,-47,14,14,-47,-16,-17,-19,-21,-47,-47,-47,14,14,14,-20,-10,-47,-18,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,44,45,46,47,48,49,50,54,55,56,58,59,60,61,62,67,68,69,71,73,79,80,81,82,83,84,86,87,88,89,90,],[-47,16,-2,-1,-3,-4,-5,-6,-7,-8,-9,-29,16,16,16,-30,-31,-32,16,16,16,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,-45,-38,-39,16,16,16,16,-29,-26,-27,-28,-22,-23,-24,-25,-46,-47,-47,16,16,66,-47,-16,-17,16,-19,-21,66,-47,-47,66,-47,16,16,16,-20,-10,-47,-18,]),'TRUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,44,45,46,47,48,49,50,54,55,56,58,59,61,62,67,68,69,71,79,80,82,83,84,86,87,88,89,90,],[-47,17,-2,-1,-3,-4,-5,-6,-7,-8,-9,-29,17,17,17,-30,-31,-32,17,17,17,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,-45,-38,-39,17,17,17,17,-29,-26,-27,-28,-22,-23,-24,-25,-46,-47,-47,17,17,-47,-16,-17,17,-19,-21,-47,-47,-47,17,17,17,-20,-10,-47,-18,]),'FALSE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,44,45,46,47,48,49,50,54,55,56,58,59,61,62,67,68,69,71,79,80,82,83,84,86,87,88,89,90,],[-47,18,-2,-1,-3,-4,-5,-6,-7,-8,-9,-29,18,18,18,-30,-31,-32,18,18,18,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,-45,-38,-39,18,18,18,18,-29,-26,-27,-28,-22,-23,-24,-25,-46,-47,-47,18,18,-47,-16,-17,18,-19,-21,-47,-47,-47,18,18,18,-20,-10,-47,-18,]),'LPRAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,44,45,46,47,48,49,50,54,55,56,57,58,59,61,62,67,68,69,71,79,80,82,83,84,86,87,88,89,90,],[-47,15,-2,-1,-3,-4,-5,-6,-7,-8,-9,-29,15,15,15,-30,-31,-32,15,15,15,-33,-34,-35,-36,-37,-40,-41,-42,-43,-44,-45,-38,-39,15,15,15,15,-29,-26,-27,-28,-22,-23,-24,-25,-46,-47,-47,60,15,15,-47,-16,-17,15,-19,-21,-47,-47,-47,15,15,15,-20,-10,-47,-18,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,40,44,45,46,47,48,49,50,54,61,62,67,69,71,87,88,89,90,],[-47,0,-2,-1,-3,-4,-5,-6,-7,-8,-9,-29,-30,-31,-32,-29,-26,-27,-28,-22,-23,-24,-25,-46,-47,-16,-17,-19,-21,-20,-10,-47,-18,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,16,17,18,40,44,45,46,47,48,49,50,54,55,56,58,59,61,62,67,69,71,79,80,82,83,84,86,87,88,89,90,],[-2,-1,-3,-4,-5,-6,-7,-8,-9,-29,-30,-31,-32,-29,-26,-27,-28,-22,-23,-24,-25,-46,-47,-47,61,62,-47,-16,-17,-19,-21,-47,-47,-47,87,88,89,-20,-10,-47,-18,]),'TIMES':([8,11,16,17,18,39,40,41,43,44,45,46,47,48,49,50,54,74,],[22,-29,-30,-31,-32,22,-29,22,22,22,22,22,22,22,22,22,-46,22,]),'DIV':([8,11,16,17,18,39,40,41,43,44,45,46,47,48,49,50,54,74,],[23,-29,-30,-31,-32,23,-29,23,23,23,23,23,23,23,23,23,-46,23,]),'PLUS':([8,11,16,17,18,39,40,41,43,44,45,46,47,48,49,50,54,74,],[24,-29,-30,-31,-32,24,-29,24,24,24,24,24,24,24,24,24,-46,24,]),'MINUS':([8,11,16,17,18,39,40,41,43,44,45,46,47,48,49,50,54,74,],[25,-29,-30,-31,-32,25,-29,25,25,25,25,25,25,25,25,25,-46,25,]),'MOD':([8,11,16,17,18,39,40,41,43,44,45,46,47,48,49,50,54,74,],[26,-29,-30,-31,-32,26,-29,26,26,26,26,26,26,26,26,26,-46,26,]),'LT':([8,11,16,17,18,39,40,41,43,44,45,46,47,48,49,50,54,74,],[27,-29,-30,-31,-32,27,-29,27,27,27,27,27,27,27,27,27,-46,27,]),'LTE':([8,11,16,17,18,39,40,41,43,44,45,46,47,48,49,50,54,74,],[28,-29,-30,-31,-32,28,-29,28,28,28,28,28,28,28,28,28,-46,28,]),'GT':([8,11,16,17,18,39,40,41,43,44,45,46,47,48,49,50,54,74,],[29,-29,-30,-31,-32,29,-29,29,29,29,29,29,29,29,29,29,-46,29,]),'GTE':([8,11,16,17,18,39,40,41,43,44,45,46,47,48,49,50,54,74,],[30,-29,-30,-31,-32,30,-29,30,30,30,30,30,30,30,30,30,-46,30,]),'EQU':([8,11,16,17,18,39,40,41,43,44,45,46,47,48,49,50,54,74,],[31,-29,-30,-31,-32,31,-29,31,31,31,31,31,31,31,31,31,-46,31,]),'NEQU':([8,11,16,17,18,39,40,41,43,44,45,46,47,48,49,50,54,74,],[32,-29,-30,-31,-32,32,-29,32,32,32,32,32,32,32,32,32,-46,32,]),'AND':([8,11,16,17,18,39,40,41,43,44,45,46,47,48,49,50,54,74,],[33,-29,-30,-31,-32,33,-29,33,33,33,33,33,33,33,33,33,-46,33,]),'OR':([8,11,16,17,18,39,40,41,43,44,45,46,47,48,49,50,54,74,],[34,-29,-30,-31,-32,34,-29,34,34,34,34,34,34,34,34,34,-46,34,]),'EQ':([11,],[35,]),'PLUS_EQUAL':([11,],[36,]),'MINUS_EQUAL':([11,],[37,]),'TIMES_EQUAL':([11,],[38,]),'COLON':([16,17,18,39,40,41,44,45,46,54,70,72,74,],[-30,-31,-32,51,-29,52,-26,-27,-28,-46,75,76,78,]),'RPRAN':([16,17,18,40,43,44,45,46,54,63,64,65,66,77,85,],[-30,-31,-32,-29,54,-26,-27,-28,-46,-15,72,-11,-14,-12,-13,]),'IN':([42,],[53,]),'LBRACE':([51,52,75,76,78,],[55,56,79,80,82,]),'RANGE':([53,],[57,]),'ELIF':([61,89,],[68,68,]),'ELSE':([61,89,],[70,70,]),'SEP':([63,65,66,77,],[-15,73,-14,81,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,55,56,79,80,82,],[1,58,59,83,84,86,]),'empty':([0,55,56,61,79,80,82,89,],[2,2,2,71,2,2,2,71,]),'statement':([1,58,59,83,84,86,],[3,3,3,3,3,3,]),'assignment':([1,58,59,83,84,86,],[4,4,4,4,4,4,]),'if':([1,58,59,83,84,86,],[5,5,5,5,5,5,]),'while':([1,58,59,83,84,86,],[6,6,6,6,6,6,]),'for':([1,58,59,83,84,86,],[7,7,7,7,7,7,]),'expr':([1,12,13,15,19,20,21,35,36,37,38,58,59,68,83,84,86,],[8,39,41,43,44,45,46,47,48,49,50,8,8,74,8,8,8,]),'operator':([8,39,41,43,44,45,46,47,48,49,50,74,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'relop':([8,39,41,43,44,45,46,47,48,49,50,74,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'logic':([8,39,41,43,44,45,46,47,48,49,50,74,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'params':([60,],[64,]),'num_or_id':([60,73,81,],[65,77,85,]),'elif':([61,89,],[67,90,]),'else':([61,89,],[69,69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',23),
  ('statements -> empty','statements',1,'p_statements','parser.py',24),
  ('statement -> assignment','statement',1,'p_statement','parser.py',34),
  ('statement -> if','statement',1,'p_statement','parser.py',35),
  ('statement -> while','statement',1,'p_statement','parser.py',36),
  ('statement -> for','statement',1,'p_statement','parser.py',37),
  ('statement -> expr','statement',1,'p_statement','parser.py',38),
  ('statement -> CONTINUE','statement',1,'p_statement','parser.py',39),
  ('statement -> BREAK','statement',1,'p_statement','parser.py',40),
  ('for -> FOR ID IN RANGE LPRAN params RPRAN COLON LBRACE statements RBRACE','for',11,'p_for','parser.py',46),
  ('params -> num_or_id','params',1,'p_params','parser.py',52),
  ('params -> num_or_id SEP num_or_id','params',3,'p_params','parser.py',53),
  ('params -> num_or_id SEP num_or_id SEP num_or_id','params',5,'p_params','parser.py',54),
  ('num_or_id -> NUMBER','num_or_id',1,'p_num_or_id','parser.py',65),
  ('num_or_id -> ID','num_or_id',1,'p_num_or_id','parser.py',66),
  ('while -> WHILE expr COLON LBRACE statements RBRACE','while',6,'p_while','parser.py',72),
  ('if -> IF expr COLON LBRACE statements RBRACE elif','if',7,'p_if','parser.py',78),
  ('elif -> ELIF expr COLON LBRACE statements RBRACE elif','elif',7,'p_elif','parser.py',84),
  ('elif -> else','elif',1,'p_elif','parser.py',85),
  ('else -> ELSE COLON LBRACE statements RBRACE','else',5,'p_else','parser.py',94),
  ('else -> empty','else',1,'p_else','parser.py',95),
  ('assignment -> ID EQ expr','assignment',3,'p_assignment','parser.py',102),
  ('assignment -> ID PLUS_EQUAL expr','assignment',3,'p_assignment','parser.py',103),
  ('assignment -> ID MINUS_EQUAL expr','assignment',3,'p_assignment','parser.py',104),
  ('assignment -> ID TIMES_EQUAL expr','assignment',3,'p_assignment','parser.py',105),
  ('expr -> expr operator expr','expr',3,'p_expr_operator_relop','parser.py',111),
  ('expr -> expr relop expr','expr',3,'p_expr_operator_relop','parser.py',112),
  ('expr -> expr logic expr','expr',3,'p_expr_operator_relop','parser.py',113),
  ('expr -> ID','expr',1,'p_expr_operator_relop','parser.py',114),
  ('expr -> NUMBER','expr',1,'p_expr_operator_relop','parser.py',115),
  ('expr -> TRUE','expr',1,'p_expr_operator_relop','parser.py',116),
  ('expr -> FALSE','expr',1,'p_expr_operator_relop','parser.py',117),
  ('operator -> TIMES','operator',1,'p_operator','parser.py',126),
  ('operator -> DIV','operator',1,'p_operator','parser.py',127),
  ('operator -> PLUS','operator',1,'p_operator','parser.py',128),
  ('operator -> MINUS','operator',1,'p_operator','parser.py',129),
  ('operator -> MOD','operator',1,'p_operator','parser.py',130),
  ('logic -> AND','logic',1,'p_logic','parser.py',136),
  ('logic -> OR','logic',1,'p_logic','parser.py',137),
  ('relop -> LT','relop',1,'p_relop','parser.py',143),
  ('relop -> LTE','relop',1,'p_relop','parser.py',144),
  ('relop -> GT','relop',1,'p_relop','parser.py',145),
  ('relop -> GTE','relop',1,'p_relop','parser.py',146),
  ('relop -> EQU','relop',1,'p_relop','parser.py',147),
  ('relop -> NEQU','relop',1,'p_relop','parser.py',148),
  ('expr -> LPRAN expr RPRAN','expr',3,'p_expr_pran','parser.py',154),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',159),
]
