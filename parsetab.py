
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocGTEGTLTELTEQUNEQUANDORleftPLUSMINUSleftTIMESDIVMODrightNOTAND BREAK COLON COMMENTS CONTINUE DIV DIV_EQUAL ELIF ELSE EQ EQU FALSE FOR GT GTE ID IF IN LBRACE LPRAN LT LTE MINUS MINUS_EQUAL MOD NEQU NOT NUMBER OR PLUS PLUS_EQUAL RANGE RBRACE RPRAN SEP TIMES TIMES_EQUAL TRUE WHILE\n        statements : statements statement\n        | empty\n        \n        statement : assignment\n                    | if\n                    | while\n                    | for\n                    | expr\n                    | CONTINUE\n                    | BREAK\n        \n        for : FOR ID IN RANGE LPRAN params RPRAN COLON LBRACE statements RBRACE\n        \n        params : num_or_id\n            |   num_or_id SEP num_or_id\n            | num_or_id SEP num_or_id SEP num_or_id\n        \n        while : WHILE expr COLON LBRACE statements RBRACE\n        \n        if : IF expr COLON LBRACE statements RBRACE elif\n        \n        elif : ELIF expr COLON LBRACE statements RBRACE elif\n        | else\n        \n        else : ELSE COLON LBRACE statements RBRACE\n        | empty\n        \n        assignment : ID EQ expr\n                   | ID PLUS_EQUAL expr\n                   | ID MINUS_EQUAL expr\n                   | ID TIMES_EQUAL expr\n        \n        expr : expr operator expr\n        | expr relop expr\n        | expr logic expr\n        | num_or_id\n        | TRUE\n        | FALSE\n        \n        operator : TIMES\n                | DIV\n                |  PLUS\n                |  MINUS\n                |  MOD\n        \n        logic : AND\n              | OR\n        \n        relop : LT\n                | LTE\n                |  GT\n                |  GTE\n                |  EQU\n                |  NEQU\n        \n        expr : LPRAN expr RPRAN\n        \n        num_or_id : NUMBER\n                | ID\n        empty :'
    
_lr_action_items = {'CONTINUE':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,19,41,45,46,47,48,49,50,51,55,56,57,59,60,62,63,66,68,70,78,79,81,82,83,85,86,87,88,89,],[-46,9,-2,-1,-3,-4,-5,-6,-7,-8,-9,-45,-27,-28,-29,-44,-45,-24,-25,-26,-20,-21,-22,-23,-43,-46,-46,9,9,-46,-14,-15,-17,-19,-46,-46,-46,9,9,9,-18,-10,-46,-16,]),'BREAK':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,19,41,45,46,47,48,49,50,51,55,56,57,59,60,62,63,66,68,70,78,79,81,82,83,85,86,87,88,89,],[-46,10,-2,-1,-3,-4,-5,-6,-7,-8,-9,-45,-27,-28,-29,-44,-45,-24,-25,-26,-20,-21,-22,-23,-43,-46,-46,10,10,-46,-14,-15,-17,-19,-46,-46,-46,10,10,10,-18,-10,-46,-16,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,47,48,49,50,51,55,56,57,59,60,61,62,63,66,67,68,70,72,78,79,80,81,82,83,85,86,87,88,89,],[-46,11,-2,-1,-3,-4,-5,-6,-7,-8,-9,-45,41,41,43,41,-27,-28,-29,-44,41,41,41,-30,-31,-32,-33,-34,-37,-38,-39,-40,-41,-42,-35,-36,41,41,41,41,-45,-24,-25,-26,-20,-21,-22,-23,-43,-46,-46,11,11,41,-46,-14,-15,41,-17,-19,41,-46,-46,41,-46,11,11,11,-18,-10,-46,-16,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,19,41,45,46,47,48,49,50,51,55,56,57,59,60,62,63,66,68,70,78,79,81,82,83,85,86,87,88,89,],[-46,12,-2,-1,-3,-4,-5,-6,-7,-8,-9,-45,-27,-28,-29,-44,-45,-24,-25,-26,-20,-21,-22,-23,-43,-46,-46,12,12,-46,-14,-15,-17,-19,-46,-46,-46,12,12,12,-18,-10,-46,-16,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,19,41,45,46,47,48,49,50,51,55,56,57,59,60,62,63,66,68,70,78,79,81,82,83,85,86,87,88,89,],[-46,13,-2,-1,-3,-4,-5,-6,-7,-8,-9,-45,-27,-28,-29,-44,-45,-24,-25,-26,-20,-21,-22,-23,-43,-46,-46,13,13,-46,-14,-15,-17,-19,-46,-46,-46,13,13,13,-18,-10,-46,-16,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,19,41,45,46,47,48,49,50,51,55,56,57,59,60,62,63,66,68,70,78,79,81,82,83,85,86,87,88,89,],[-46,14,-2,-1,-3,-4,-5,-6,-7,-8,-9,-45,-27,-28,-29,-44,-45,-24,-25,-26,-20,-21,-22,-23,-43,-46,-46,14,14,-46,-14,-15,-17,-19,-46,-46,-46,14,14,14,-18,-10,-46,-16,]),'TRUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,47,48,49,50,51,55,56,57,59,60,62,63,66,67,68,70,78,79,81,82,83,85,86,87,88,89,],[-46,17,-2,-1,-3,-4,-5,-6,-7,-8,-9,-45,17,17,17,-27,-28,-29,-44,17,17,17,-30,-31,-32,-33,-34,-37,-38,-39,-40,-41,-42,-35,-36,17,17,17,17,-45,-24,-25,-26,-20,-21,-22,-23,-43,-46,-46,17,17,-46,-14,-15,17,-17,-19,-46,-46,-46,17,17,17,-18,-10,-46,-16,]),'FALSE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,47,48,49,50,51,55,56,57,59,60,62,63,66,67,68,70,78,79,81,82,83,85,86,87,88,89,],[-46,18,-2,-1,-3,-4,-5,-6,-7,-8,-9,-45,18,18,18,-27,-28,-29,-44,18,18,18,-30,-31,-32,-33,-34,-37,-38,-39,-40,-41,-42,-35,-36,18,18,18,18,-45,-24,-25,-26,-20,-21,-22,-23,-43,-46,-46,18,18,-46,-14,-15,18,-17,-19,-46,-46,-46,18,18,18,-18,-10,-46,-16,]),'LPRAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,47,48,49,50,51,55,56,57,58,59,60,62,63,66,67,68,70,78,79,81,82,83,85,86,87,88,89,],[-46,15,-2,-1,-3,-4,-5,-6,-7,-8,-9,-45,15,15,15,-27,-28,-29,-44,15,15,15,-30,-31,-32,-33,-34,-37,-38,-39,-40,-41,-42,-35,-36,15,15,15,15,-45,-24,-25,-26,-20,-21,-22,-23,-43,-46,-46,61,15,15,-46,-14,-15,15,-17,-19,-46,-46,-46,15,15,15,-18,-10,-46,-16,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,47,48,49,50,51,55,56,57,59,60,61,62,63,66,67,68,70,72,78,79,80,81,82,83,85,86,87,88,89,],[-46,19,-2,-1,-3,-4,-5,-6,-7,-8,-9,-45,19,19,19,-27,-28,-29,-44,19,19,19,-30,-31,-32,-33,-34,-37,-38,-39,-40,-41,-42,-35,-36,19,19,19,19,-45,-24,-25,-26,-20,-21,-22,-23,-43,-46,-46,19,19,19,-46,-14,-15,19,-17,-19,19,-46,-46,19,-46,19,19,19,-18,-10,-46,-16,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,16,17,18,19,41,45,46,47,48,49,50,51,55,62,63,66,68,70,86,87,88,89,],[-46,0,-2,-1,-3,-4,-5,-6,-7,-8,-9,-45,-27,-28,-29,-44,-45,-24,-25,-26,-20,-21,-22,-23,-43,-46,-14,-15,-17,-19,-18,-10,-46,-16,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,16,17,18,19,41,45,46,47,48,49,50,51,55,56,57,59,60,62,63,66,68,70,78,79,81,82,83,85,86,87,88,89,],[-2,-1,-3,-4,-5,-6,-7,-8,-9,-45,-27,-28,-29,-44,-45,-24,-25,-26,-20,-21,-22,-23,-43,-46,-46,62,63,-46,-14,-15,-17,-19,-46,-46,-46,86,87,88,-18,-10,-46,-16,]),'TIMES':([8,11,16,17,18,19,40,41,42,44,45,46,47,48,49,50,51,55,73,],[23,-45,-27,-28,-29,-44,23,-45,23,23,23,23,23,23,23,23,23,-43,23,]),'DIV':([8,11,16,17,18,19,40,41,42,44,45,46,47,48,49,50,51,55,73,],[24,-45,-27,-28,-29,-44,24,-45,24,24,24,24,24,24,24,24,24,-43,24,]),'PLUS':([8,11,16,17,18,19,40,41,42,44,45,46,47,48,49,50,51,55,73,],[25,-45,-27,-28,-29,-44,25,-45,25,25,25,25,25,25,25,25,25,-43,25,]),'MINUS':([8,11,16,17,18,19,40,41,42,44,45,46,47,48,49,50,51,55,73,],[26,-45,-27,-28,-29,-44,26,-45,26,26,26,26,26,26,26,26,26,-43,26,]),'MOD':([8,11,16,17,18,19,40,41,42,44,45,46,47,48,49,50,51,55,73,],[27,-45,-27,-28,-29,-44,27,-45,27,27,27,27,27,27,27,27,27,-43,27,]),'LT':([8,11,16,17,18,19,40,41,42,44,45,46,47,48,49,50,51,55,73,],[28,-45,-27,-28,-29,-44,28,-45,28,28,28,28,28,28,28,28,28,-43,28,]),'LTE':([8,11,16,17,18,19,40,41,42,44,45,46,47,48,49,50,51,55,73,],[29,-45,-27,-28,-29,-44,29,-45,29,29,29,29,29,29,29,29,29,-43,29,]),'GT':([8,11,16,17,18,19,40,41,42,44,45,46,47,48,49,50,51,55,73,],[30,-45,-27,-28,-29,-44,30,-45,30,30,30,30,30,30,30,30,30,-43,30,]),'GTE':([8,11,16,17,18,19,40,41,42,44,45,46,47,48,49,50,51,55,73,],[31,-45,-27,-28,-29,-44,31,-45,31,31,31,31,31,31,31,31,31,-43,31,]),'EQU':([8,11,16,17,18,19,40,41,42,44,45,46,47,48,49,50,51,55,73,],[32,-45,-27,-28,-29,-44,32,-45,32,32,32,32,32,32,32,32,32,-43,32,]),'NEQU':([8,11,16,17,18,19,40,41,42,44,45,46,47,48,49,50,51,55,73,],[33,-45,-27,-28,-29,-44,33,-45,33,33,33,33,33,33,33,33,33,-43,33,]),'AND':([8,11,16,17,18,19,40,41,42,44,45,46,47,48,49,50,51,55,73,],[34,-45,-27,-28,-29,-44,34,-45,34,34,34,34,34,34,34,34,34,-43,34,]),'OR':([8,11,16,17,18,19,40,41,42,44,45,46,47,48,49,50,51,55,73,],[35,-45,-27,-28,-29,-44,35,-45,35,35,35,35,35,35,35,35,35,-43,35,]),'EQ':([11,],[36,]),'PLUS_EQUAL':([11,],[37,]),'MINUS_EQUAL':([11,],[38,]),'TIMES_EQUAL':([11,],[39,]),'COLON':([16,17,18,19,40,41,42,45,46,47,55,69,71,73,],[-27,-28,-29,-44,52,-45,53,-24,-25,-26,-43,74,75,77,]),'RPRAN':([16,17,18,19,41,44,45,46,47,55,64,65,76,84,],[-27,-28,-29,-44,-45,55,-24,-25,-26,-43,71,-11,-12,-13,]),'SEP':([19,41,65,76,],[-44,-45,72,80,]),'IN':([43,],[54,]),'LBRACE':([52,53,74,75,77,],[56,57,78,79,81,]),'RANGE':([54,],[58,]),'ELIF':([62,88,],[67,67,]),'ELSE':([62,88,],[69,69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,56,57,78,79,81,],[1,59,60,82,83,85,]),'empty':([0,56,57,62,78,79,81,88,],[2,2,2,70,2,2,2,70,]),'statement':([1,59,60,82,83,85,],[3,3,3,3,3,3,]),'assignment':([1,59,60,82,83,85,],[4,4,4,4,4,4,]),'if':([1,59,60,82,83,85,],[5,5,5,5,5,5,]),'while':([1,59,60,82,83,85,],[6,6,6,6,6,6,]),'for':([1,59,60,82,83,85,],[7,7,7,7,7,7,]),'expr':([1,12,13,15,20,21,22,36,37,38,39,59,60,67,82,83,85,],[8,40,42,44,45,46,47,48,49,50,51,8,8,73,8,8,8,]),'num_or_id':([1,12,13,15,20,21,22,36,37,38,39,59,60,61,67,72,80,82,83,85,],[16,16,16,16,16,16,16,16,16,16,16,16,16,65,16,76,84,16,16,16,]),'operator':([8,40,42,44,45,46,47,48,49,50,51,73,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'relop':([8,40,42,44,45,46,47,48,49,50,51,73,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'logic':([8,40,42,44,45,46,47,48,49,50,51,73,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'params':([61,],[64,]),'elif':([62,88,],[66,89,]),'else':([62,88,],[68,68,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',26),
  ('statements -> empty','statements',1,'p_statements','parser.py',27),
  ('statement -> assignment','statement',1,'p_statement','parser.py',37),
  ('statement -> if','statement',1,'p_statement','parser.py',38),
  ('statement -> while','statement',1,'p_statement','parser.py',39),
  ('statement -> for','statement',1,'p_statement','parser.py',40),
  ('statement -> expr','statement',1,'p_statement','parser.py',41),
  ('statement -> CONTINUE','statement',1,'p_statement','parser.py',42),
  ('statement -> BREAK','statement',1,'p_statement','parser.py',43),
  ('for -> FOR ID IN RANGE LPRAN params RPRAN COLON LBRACE statements RBRACE','for',11,'p_for','parser.py',49),
  ('params -> num_or_id','params',1,'p_params','parser.py',55),
  ('params -> num_or_id SEP num_or_id','params',3,'p_params','parser.py',56),
  ('params -> num_or_id SEP num_or_id SEP num_or_id','params',5,'p_params','parser.py',57),
  ('while -> WHILE expr COLON LBRACE statements RBRACE','while',6,'p_while','parser.py',68),
  ('if -> IF expr COLON LBRACE statements RBRACE elif','if',7,'p_if','parser.py',74),
  ('elif -> ELIF expr COLON LBRACE statements RBRACE elif','elif',7,'p_elif','parser.py',80),
  ('elif -> else','elif',1,'p_elif','parser.py',81),
  ('else -> ELSE COLON LBRACE statements RBRACE','else',5,'p_else','parser.py',90),
  ('else -> empty','else',1,'p_else','parser.py',91),
  ('assignment -> ID EQ expr','assignment',3,'p_assignment','parser.py',98),
  ('assignment -> ID PLUS_EQUAL expr','assignment',3,'p_assignment','parser.py',99),
  ('assignment -> ID MINUS_EQUAL expr','assignment',3,'p_assignment','parser.py',100),
  ('assignment -> ID TIMES_EQUAL expr','assignment',3,'p_assignment','parser.py',101),
  ('expr -> expr operator expr','expr',3,'p_expr_operator_relop','parser.py',107),
  ('expr -> expr relop expr','expr',3,'p_expr_operator_relop','parser.py',108),
  ('expr -> expr logic expr','expr',3,'p_expr_operator_relop','parser.py',109),
  ('expr -> num_or_id','expr',1,'p_expr_operator_relop','parser.py',110),
  ('expr -> TRUE','expr',1,'p_expr_operator_relop','parser.py',111),
  ('expr -> FALSE','expr',1,'p_expr_operator_relop','parser.py',112),
  ('operator -> TIMES','operator',1,'p_operator','parser.py',121),
  ('operator -> DIV','operator',1,'p_operator','parser.py',122),
  ('operator -> PLUS','operator',1,'p_operator','parser.py',123),
  ('operator -> MINUS','operator',1,'p_operator','parser.py',124),
  ('operator -> MOD','operator',1,'p_operator','parser.py',125),
  ('logic -> AND','logic',1,'p_logic','parser.py',131),
  ('logic -> OR','logic',1,'p_logic','parser.py',132),
  ('relop -> LT','relop',1,'p_relop','parser.py',138),
  ('relop -> LTE','relop',1,'p_relop','parser.py',139),
  ('relop -> GT','relop',1,'p_relop','parser.py',140),
  ('relop -> GTE','relop',1,'p_relop','parser.py',141),
  ('relop -> EQU','relop',1,'p_relop','parser.py',142),
  ('relop -> NEQU','relop',1,'p_relop','parser.py',143),
  ('expr -> LPRAN expr RPRAN','expr',3,'p_expr_pran','parser.py',149),
  ('num_or_id -> NUMBER','num_or_id',1,'p_num_or_id','parser.py',155),
  ('num_or_id -> ID','num_or_id',1,'p_num_or_id','parser.py',156),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',162),
]
